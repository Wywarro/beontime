version: "3.7"

volumes:
  postgresql: {}
  postgresql-backup: {}

services:
  postgresql:
    image: postgres:14
    container_name: beontime-postgresql.dev
    environment:
      POSTGRES_DB: "${DEFAULT_DATABASE_NAME:-beontime}"
      POSTGRES_USER: "${DEFAULT_USERNAME:-admin}"
      POSTGRES_PASSWORD: "${DEFAULT_PASSWORD:-Pr0st0ZM0stu}"
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5433:5432
    volumes:
      - postgresql:/var/lib/postgresql/data
      - postgresql-backup:/backups
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: docker/development/aspnet/Dockerfile
      target: build
    image: beontime-api:local
    container_name: beontime-api.dev
    working_dir: /src
    entrypoint: dotnet watch run --no-launch-profile --project
      ./Beontime.WebApi/Beontime.WebApi.csproj
    ports:
      - "${PORT-5000}:${PORT-5000}"
    volumes:
      - ./beontime.backend/src:/src
    environment:
      - PORT=${PORT-5000}
      - BEONTIME_CONNECTIONSTRINGS__POSTGRESQL=Server=postgresql;Port=5432;Database=beontime;User Id=${DEFAULT_USERNAME:-admin};Password=${DEFAULT_PASSWORD:-Pr0st0ZM0stu};
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:$$PORT/health || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
    depends_on:
      - postgresql

  # vue:
  #   build:
  #     context: .
  #     dockerfile: docker/development/vue/Dockerfile
  #   container_name: beontime-ui.dev
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ~/.composer-docker/cache:/root/.composer/cache:delegated
  #     - ./beontime.frontend:/app/src:cached
  #     - /app/src/node_modules
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - CHOKIDAR_INTERVAL=1000
  #   depends_on:
  #     - postgresql
